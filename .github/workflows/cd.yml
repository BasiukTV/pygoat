name: CD-Pipeline

on:
  # We will trigger this pipeline manually, or from the CI pipeline
  workflow_dispatch:
    inputs:
      ci_run_id:
        description: 'Run Id of the CI pipeline used to find the artifacts'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    environment: common # For access to ${{ secrets.TF_API_TOKEN }}
    env:
      TF_HOME: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: terraform
          path: ${{ env.TF_HOME }}
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Provision
        uses: ./.github/actions/terraform-provision
        with:
          workspace: pygoat-test
          tfvars: ./variable_values/test.tfvars
          tf_api_token: ${{ secrets.TF_API_TOKEN }}

      - name: Deploy to AppService
        uses: ./.github/actions/deploy-appservice
        with:
          app_name: app-taras-devsecoppapp-test-westus
          resource_group: rg-taras-devsecoppapp-test-westus
          docker_image: ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.ci_run_id }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://app-taras-devsecoppapp-test-westus.azurewebsites.net'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
  
  prod:
    needs: [test]
    runs-on: ubuntu-latest
    environment: common # For access to ${{ secrets.TF_API_TOKEN }}
    env:
      TF_HOME: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: terraform
          path: ${{ env.TF_HOME }}
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Provision
        uses: ./.github/actions/terraform-provision
        with:
          workspace: pygoat-prod
          tfvars: ./variable_values/prod.tfvars
          tf_api_token: ${{ secrets.TF_API_TOKEN }}

      - name: Deploy to AppService
        uses: ./.github/actions/deploy-appservice
        with:
          app_name: app-taras-devsecoppapp-prod-eastus2
          resource_group: rg-taras-devsecoppapp-prod-eastus2
          docker_image: ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.ci_run_id }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
